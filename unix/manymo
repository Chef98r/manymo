#!/usr/bin/expect -f

set command [lindex $argv 0]
set cmdargs [split [lindex $argv 1] {:}]

log_user 0

proc usage {} {
  puts "This command is meant to be run with arguments shown when starting a native dev emulator at https://app.manymo.com"
  exit 0
} 

proc unauthorized {} {
  puts "Unauthorized."
  exit -1
}

proc check_for_adb {} {
  spawn which adb
  expect eof
  catch wait reason
  set exit_status [lindex $reason 3]
  if { $exit_status != 0 } {
    puts "Could not find adb. Please install the Android sdk and make sure adb is in your path."
    exit 1
  }
}

proc tunnel a {
  check_for_adb
  set host [lindex $a 0]
  set port [lindex $a 1]
  set password [lindex $a 2]
  set port2 [expr $port + 1]
  spawn ssh -fN -o "ExitOnForwardFailure yes" -L$port:localhost:$port -L$port2:localhost:$port2 adb$port@$host
  set ssh_id $spawn_id
  set pid [ exp_pid]
  set timeout 10
  set sent_password 0
  set ssh_error 0
  while { $sent_password == 0 && $ssh_error == 0 } {
    expect { 
      -re ".*assword:" {
        send "$password\n"
        set sent_password 1
      }
      -re "authenticity of host.*can't be established.*\(yes/no\)\?" {
        send "yes\n"
      }
      timeout {
        puts "Timed out while attempting to setup tunnel."
        exit -1
      }
    }
  }
  expect {
    "\n"
  }
  set timeout 5
  set connected 0
  expect {
    -re "Permission denied" unauthorized
    -re "Address already in use" {
      puts "Port $port already in use."
    }
    default {
      #puts "Connected"
      set connected 1
    }
  }
  if { $connected == 1} {
    #log_user 1
    set timeout 10
    spawn adb kill-server
    sleep 1
    spawn adb devices
    expect {
      "emulator-$port" { 
        puts "emulator-$port successfully connected via tunnel to Manymo." 
      }
      timeout {
        puts "Unable to setup emulator tunnel."
      }
      "error: protocol fault (no status)" {
        puts "Could not get status of emulator.  Please check adb devices for emulator status."
      }
    }  
  } 
}

switch $command {
  tunnel { tunnel $cmdargs }
  default { usage }
}

